services:
  mysql-db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 'Root2147'
      MYSQL_DATABASE: web_URL_Shortener
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    ports:
      - "3307:3306"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:6.2
    command: ["redis-server", "--notify-keyspace-events", "Ex"]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "6379:6379"
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: web_URL_Shortener
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      GIN_MODE: release
    ports:
      - "8080:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: web_URL_Shortener
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
    depends_on:
      mysql-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge